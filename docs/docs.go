// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "bakit.german.work@icloud.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partially update an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Partially update a user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/headman/{headman_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user by headman ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by headman ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Headman ID",
                        "name": "headman_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/name/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/role/{role}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all users by role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users by role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/student/{student_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by student ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/teacher/{teacher_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user by teacher ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by teacher ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/universities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all universities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Get all universities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.University"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing university",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Update a university",
                "parameters": [
                    {
                        "description": "University info",
                        "name": "university",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutUniversityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new university",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Create a university",
                "parameters": [
                    {
                        "description": "University info",
                        "name": "university",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUniversityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partially update an existing university",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Partially update a university",
                "parameters": [
                    {
                        "description": "University info",
                        "name": "university",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchUniversityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/universities/name/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a university by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Get a university by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "University Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.University"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/universities/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a university by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Get a university by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "University ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.University"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing university",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Delete a university",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "University ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attendances": {
            "get": {
                "description": "Get a list of all attendances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get all attendances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Attendance"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update multiple existing attendances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Update multiple attendances",
                "parameters": [
                    {
                        "description": "Attendances info",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutAttendancesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new attendance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Create an attendance",
                "parameters": [
                    {
                        "description": "Attendance info",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing attendance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Partially update an attendance",
                "parameters": [
                    {
                        "description": "Attendance info",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attendances/student/{student_id}": {
            "get": {
                "description": "Get attendances by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get attendances by student ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Attendance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attendances/{id}": {
            "get": {
                "description": "Get an attendance by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get an attendance by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Attendance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing attendance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Delete an attendance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Sign in a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "User sign-in info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SignInUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/classrooms": {
            "get": {
                "description": "Get a list of all classrooms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Get all classrooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Classroom"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing classroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Update a classroom",
                "parameters": [
                    {
                        "description": "Classroom info",
                        "name": "classroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutClassroomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new classroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Create a classroom",
                "parameters": [
                    {
                        "description": "Classroom info",
                        "name": "classroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateClassroomRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing classroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Partially update a classroom",
                "parameters": [
                    {
                        "description": "Classroom info",
                        "name": "classroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchClassroomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/classrooms/{id}": {
            "get": {
                "description": "Get a classroom by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Get a classroom by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Classroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing classroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classrooms"
                ],
                "summary": "Delete a classroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departaments": {
            "get": {
                "description": "Get a list of all departaments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Get all departaments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.DepartamentInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing departament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Update a departament",
                "parameters": [
                    {
                        "description": "Departament info",
                        "name": "departament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutDepartamentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new departament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Create a departament",
                "parameters": [
                    {
                        "description": "Departament info",
                        "name": "departament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDepartamentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing departament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Partially update a departament",
                "parameters": [
                    {
                        "description": "Departament info",
                        "name": "departament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchDepartamentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departaments/faculty/{faculty_id}": {
            "get": {
                "description": "Get a list of departaments by faculty ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Get departaments by faculty ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "faculty_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.DepartamentInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departaments/name/{name}": {
            "get": {
                "description": "Get a departament by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Get a departament by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Departament Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DepartamentInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departaments/{id}": {
            "get": {
                "description": "Get a departament by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Get a departament by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DepartamentInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing departament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departaments"
                ],
                "summary": "Delete a departament",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/discipline_types": {
            "get": {
                "description": "Get a list of all discipline types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Get all discipline types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.DisciplineType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing discipline type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Update a discipline type",
                "parameters": [
                    {
                        "description": "Discipline type info",
                        "name": "discipline_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutDisciplineTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new discipline type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Create a discipline type",
                "parameters": [
                    {
                        "description": "Discipline type info",
                        "name": "discipline_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDisciplineTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing discipline type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Partially update a discipline type",
                "parameters": [
                    {
                        "description": "Discipline type info",
                        "name": "discipline_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchDisciplineTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/discipline_types/{id}": {
            "get": {
                "description": "Get a discipline type by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Get a discipline type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DisciplineType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing discipline type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineTypes"
                ],
                "summary": "Delete a discipline type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/disciplines": {
            "get": {
                "description": "Get a list of all disciplines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get all disciplines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.DisciplineInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Update a discipline",
                "parameters": [
                    {
                        "description": "Discipline info",
                        "name": "discipline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutDisciplineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Create a discipline",
                "parameters": [
                    {
                        "description": "Discipline info",
                        "name": "discipline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDisciplineRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Partially update a discipline",
                "parameters": [
                    {
                        "description": "Discipline info",
                        "name": "discipline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchDisciplineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/disciplines/departament/{departament_id}": {
            "get": {
                "description": "Get a list of disciplines by departament ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get disciplines by departament ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departament ID",
                        "name": "departament_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.DisciplineInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/disciplines/name/{name}": {
            "get": {
                "description": "Get a discipline by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get a discipline by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discipline Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DisciplineInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/disciplines/{id}": {
            "get": {
                "description": "Get a discipline by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get a discipline by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DisciplineInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Delete a discipline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/education_levels": {
            "get": {
                "description": "Get a list of all education levels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Get all education levels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.EducationLevel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing education level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Update an education level",
                "parameters": [
                    {
                        "description": "Education level info",
                        "name": "education_level",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutEducationLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new education level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Create an education level",
                "parameters": [
                    {
                        "description": "Education level info",
                        "name": "education_level",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateEducationLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing education level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Partially update an education level",
                "parameters": [
                    {
                        "description": "Education level info",
                        "name": "education_level",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchEducationLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/education_levels/{id}": {
            "get": {
                "description": "Get an education level by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Get an education level by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Education level ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.EducationLevel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing education level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationLevels"
                ],
                "summary": "Delete an education level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Education level ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/education_types": {
            "get": {
                "description": "Get a list of all education types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Get all education types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.EducationType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing education type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Update an education type",
                "parameters": [
                    {
                        "description": "Education type info",
                        "name": "education_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutEducationTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new education type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Create an education type",
                "parameters": [
                    {
                        "description": "Education type info",
                        "name": "education_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateEducationTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing education type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Partially update an education type",
                "parameters": [
                    {
                        "description": "Education type info",
                        "name": "education_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchEducationTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/education_types/name/{name}": {
            "get": {
                "description": "Get an education type by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Get an education type by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Education type Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.EducationType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/education_types/{id}": {
            "get": {
                "description": "Get an education type by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Get an education type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Education type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.EducationType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing education type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EducationTypes"
                ],
                "summary": "Delete an education type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Education type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/faculties": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all faculties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Get all faculties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Faculty"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing faculty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Update a faculty",
                "parameters": [
                    {
                        "description": "Faculty info",
                        "name": "faculty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutFacultyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new faculty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Create a faculty",
                "parameters": [
                    {
                        "description": "Faculty info",
                        "name": "faculty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateFacultyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partially update an existing faculty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Partially update a faculty",
                "parameters": [
                    {
                        "description": "Faculty info",
                        "name": "faculty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchFacultyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/faculties/id/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a faculty by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Get a faculty by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Faculty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/faculties/name/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a faculty by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Get a faculty by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Faculty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/faculties/university/id/{university_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of faculties by university ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Get faculties by university ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "University ID",
                        "name": "university_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Faculty"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/faculties/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing faculty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faculties"
                ],
                "summary": "Delete a faculty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Faculty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "description": "Get a list of all groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get all groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.GroupInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Update a group",
                "parameters": [
                    {
                        "description": "Group info",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Create a group",
                "parameters": [
                    {
                        "description": "Group info",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Partially update a group",
                "parameters": [
                    {
                        "description": "Group info",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/name/{name}": {
            "get": {
                "description": "Get a group by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get a group by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GroupInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/profile/{profile_id}": {
            "get": {
                "description": "Get a list of groups by profile ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get groups by profile ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Profile ID",
                        "name": "profile_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.GroupInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "description": "Get a group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get a group by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GroupInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/headmen": {
            "get": {
                "description": "Get a list of all headmen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Get all headmen",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.HeadmanInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing headman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Update a headman",
                "parameters": [
                    {
                        "description": "Headman info",
                        "name": "headman",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutHeadmanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new headman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Create a headman",
                "parameters": [
                    {
                        "description": "Headman info",
                        "name": "headman",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateHeadmanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing headman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Partially update a headman",
                "parameters": [
                    {
                        "description": "Headman info",
                        "name": "headman",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchHeadmanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/headmen/{id}": {
            "get": {
                "description": "Get a headman by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Get a headman by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Headman ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.HeadmanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing headman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Headmen"
                ],
                "summary": "Delete a headman",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Headman ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles": {
            "get": {
                "description": "Get a list of all profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get all profiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ProfileInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "description": "Profile info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Create a profile",
                "parameters": [
                    {
                        "description": "Profile info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Partially update a profile",
                "parameters": [
                    {
                        "description": "Profile info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles/education_type/{education_type_id}": {
            "get": {
                "description": "Get a list of profiles by education type ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get profiles by education type ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Education Type ID",
                        "name": "education_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ProfileInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles/name/{name}": {
            "get": {
                "description": "Get a profile by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a profile by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ProfileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles/specialty/{specialty_code}": {
            "get": {
                "description": "Get a list of profiles by specialty code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get profiles by specialty code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty Code",
                        "name": "specialty_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ProfileInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles/{id}": {
            "get": {
                "description": "Get a profile by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a profile by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ProfileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Delete a profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "description": "Get a list of all schedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get all schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Update a schedule",
                "parameters": [
                    {
                        "description": "Schedule info",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Create a schedule",
                "parameters": [
                    {
                        "description": "Schedule info",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Partially update a schedule",
                "parameters": [
                    {
                        "description": "Schedule info",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/group/{group_id}": {
            "get": {
                "description": "Get schedules by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/group/{group_id}/actual": {
            "get": {
                "description": "Get actual schedules by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get actual schedules by group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/group/{group_id}/week/{week_type}": {
            "get": {
                "description": "Get schedules by group ID and week type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by group ID and week type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Week Type",
                        "name": "week_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/group/{group_id}/week/{week_type}/day/{day_of_week}": {
            "get": {
                "description": "Get schedules by group ID, week type, and day of the week",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by group ID, week type, and day of the week",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Week Type",
                        "name": "week_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Day of the Week",
                        "name": "day_of_week",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/teacher/{teacher_id}": {
            "get": {
                "description": "Get schedules by teacher ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by teacher ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/teacher/{teacher_id}/actual": {
            "get": {
                "description": "Get actual schedules by teacher ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get actual schedules by teacher ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/teacher/{teacher_id}/week/{week_type}": {
            "get": {
                "description": "Get schedules by teacher ID and week type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by teacher ID and week type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Week Type",
                        "name": "week_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/teacher/{teacher_id}/week/{week_type}/day/{day_of_week}": {
            "get": {
                "description": "Get schedules by teacher ID, week type, and day of the week",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get schedules by teacher ID, week type, and day of the week",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "teacher_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Week Type",
                        "name": "week_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Day of the Week",
                        "name": "day_of_week",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/{id}": {
            "get": {
                "description": "Get a schedule by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get a schedule by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Schedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete a schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/specialties": {
            "get": {
                "description": "Get a list of all specialties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get all specialties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.SpecialtyInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Update a specialty",
                "parameters": [
                    {
                        "description": "Specialty info",
                        "name": "specialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutSpecialtyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Create a specialty",
                "parameters": [
                    {
                        "description": "Specialty info",
                        "name": "specialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateSpecialtyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Partially update a specialty",
                "parameters": [
                    {
                        "description": "Specialty info",
                        "name": "specialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchSpecialtyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/specialties/departament/{departament_id}": {
            "get": {
                "description": "Get a list of specialties by departament ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get specialties by departament ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departament ID",
                        "name": "departament_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.SpecialtyInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/specialties/name/{name}": {
            "get": {
                "description": "Get a specialty by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get a specialty by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SpecialtyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/specialties/{code}": {
            "get": {
                "description": "Get a specialty by its code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get a specialty by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SpecialtyInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Delete a specialty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "description": "Get a list of all students",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get all students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Student"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update a student",
                "parameters": [
                    {
                        "description": "Student info",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create a student",
                "parameters": [
                    {
                        "description": "Student info",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Partially update a student",
                "parameters": [
                    {
                        "description": "Student info",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students/group/{group_id}": {
            "get": {
                "description": "Get a list of students by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get students by group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Student"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "description": "Get a student by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get a student by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teachers": {
            "get": {
                "description": "Get a list of all teachers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get all teachers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.TeacherInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Update a teacher",
                "parameters": [
                    {
                        "description": "Teacher info",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PutTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Create a teacher",
                "parameters": [
                    {
                        "description": "Teacher info",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an existing teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Partially update a teacher",
                "parameters": [
                    {
                        "description": "Teacher info",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.PatchTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teachers/departament/{departament_id}": {
            "get": {
                "description": "Get a list of teachers by departament ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get teachers by departament ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departament ID",
                        "name": "departament_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.TeacherInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teachers/email/{email}": {
            "get": {
                "description": "Get a teacher by its email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get a teacher by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TeacherInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teachers/{id}": {
            "get": {
                "description": "Get a teacher by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get a teacher by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TeacherInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete a teacher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Attendance": {
            "type": "object",
            "properties": {
                "attendance_id": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "late_arrival": {
                    "type": "boolean"
                },
                "presence": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "respectfulness": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "domain.Classroom": {
            "type": "object",
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "classroom_name": {
                    "type": "string"
                }
            }
        },
        "domain.Departament": {
            "type": "object",
            "properties": {
                "departament_email": {
                    "type": "string"
                },
                "departament_id": {
                    "type": "integer"
                },
                "departament_name": {
                    "type": "string"
                },
                "faculty_id": {
                    "type": "integer"
                },
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                }
            }
        },
        "domain.DepartamentInfo": {
            "type": "object",
            "properties": {
                "departament": {
                    "$ref": "#/definitions/domain.Departament"
                },
                "departament_sub": {
                    "$ref": "#/definitions/domain.DepartamentSub"
                }
            }
        },
        "domain.DepartamentSub": {
            "type": "object",
            "properties": {
                "faculty_name": {
                    "type": "string"
                }
            }
        },
        "domain.Discipline": {
            "type": "object",
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_name": {
                    "type": "string"
                }
            }
        },
        "domain.DisciplineInfo": {
            "type": "object",
            "properties": {
                "discipline": {
                    "$ref": "#/definitions/domain.Discipline"
                },
                "discipline_sub": {
                    "$ref": "#/definitions/domain.DisciplineSub"
                }
            }
        },
        "domain.DisciplineSub": {
            "type": "object",
            "properties": {
                "departament_name": {
                    "type": "string"
                }
            }
        },
        "domain.DisciplineType": {
            "type": "object",
            "properties": {
                "discipline_type_id": {
                    "type": "integer"
                },
                "discipline_type_name": {
                    "type": "string"
                }
            }
        },
        "domain.EducationLevel": {
            "type": "object",
            "properties": {
                "education_level_id": {
                    "type": "integer"
                },
                "education_level_name": {
                    "type": "string"
                }
            }
        },
        "domain.EducationType": {
            "type": "object",
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "education_type_name": {
                    "type": "string"
                }
            }
        },
        "domain.Faculty": {
            "type": "object",
            "properties": {
                "faculty_email": {
                    "type": "string"
                },
                "faculty_id": {
                    "type": "integer"
                },
                "faculty_name": {
                    "type": "string"
                },
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                },
                "university_id": {
                    "type": "integer"
                }
            }
        },
        "domain.Group": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                }
            }
        },
        "domain.GroupInfo": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/domain.Group"
                },
                "group_sub": {
                    "$ref": "#/definitions/domain.GroupSub"
                }
            }
        },
        "domain.GroupSub": {
            "type": "object",
            "properties": {
                "profile_name": {
                    "type": "string"
                }
            }
        },
        "domain.Headman": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "headman_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "domain.HeadmanInfo": {
            "type": "object",
            "properties": {
                "headman": {
                    "$ref": "#/definitions/domain.Headman"
                },
                "headman_sub": {
                    "$ref": "#/definitions/domain.HeadmanSub"
                }
            }
        },
        "domain.HeadmanSub": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "student_full_name": {
                    "$ref": "#/definitions/domain.StudentFullName"
                }
            }
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_name": {
                    "type": "string"
                },
                "specialty_code": {
                    "type": "string"
                }
            }
        },
        "domain.ProfileInfo": {
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/domain.Profile"
                },
                "profile_sub": {
                    "$ref": "#/definitions/domain.ProfileSub"
                }
            }
        },
        "domain.ProfileSub": {
            "type": "object",
            "properties": {
                "education_type_name": {
                    "type": "string"
                }
            }
        },
        "domain.Schedule": {
            "type": "object",
            "properties": {
                "begin_studies": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "day_of_week": {
                    "type": "string"
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_type_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "is_actual": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "semester": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "week_type": {
                    "type": "string"
                }
            }
        },
        "domain.Specialty": {
            "type": "object",
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "education_level_id": {
                    "type": "integer"
                },
                "specialty_code": {
                    "type": "string"
                },
                "specialty_name": {
                    "type": "string"
                }
            }
        },
        "domain.SpecialtyInfo": {
            "type": "object",
            "properties": {
                "specialty": {
                    "$ref": "#/definitions/domain.Specialty"
                },
                "specialty_sub": {
                    "$ref": "#/definitions/domain.SpecialtySub"
                }
            }
        },
        "domain.SpecialtySub": {
            "type": "object",
            "properties": {
                "departament_name": {
                    "type": "string"
                },
                "education_level_name": {
                    "type": "string"
                }
            }
        },
        "domain.Student": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "domain.StudentFullName": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                }
            }
        },
        "domain.Teacher": {
            "type": "object",
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "teacher_email": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "domain.TeacherFullName": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                }
            }
        },
        "domain.TeacherInfo": {
            "type": "object",
            "properties": {
                "teacher": {
                    "$ref": "#/definitions/domain.Teacher"
                },
                "teacher_sub": {
                    "$ref": "#/definitions/domain.TeacherSub"
                }
            }
        },
        "domain.TeacherSub": {
            "type": "object",
            "properties": {
                "departament_name": {
                    "type": "string"
                }
            }
        },
        "domain.University": {
            "type": "object",
            "properties": {
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                },
                "university_email": {
                    "type": "string"
                },
                "university_id": {
                    "type": "integer"
                },
                "university_name": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "headman_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.UserInfo": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/domain.User"
                },
                "user_sub": {
                    "$ref": "#/definitions/domain.UserSub"
                }
            }
        },
        "domain.UserSub": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "student_full_name": {
                    "$ref": "#/definitions/domain.StudentFullName"
                },
                "teacher_full_name": {
                    "$ref": "#/definitions/domain.TeacherFullName"
                }
            }
        },
        "handler.CreateAttendanceRequest": {
            "type": "object",
            "required": [
                "created",
                "schedule_id",
                "student_id"
            ],
            "properties": {
                "created": {
                    "type": "string"
                },
                "late_arrival": {
                    "type": "boolean"
                },
                "presence": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "respectfulness": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.CreateClassroomRequest": {
            "type": "object",
            "required": [
                "classroom_name"
            ],
            "properties": {
                "classroom_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDepartamentRequest": {
            "type": "object",
            "required": [
                "departament_email",
                "departament_name",
                "faculty_id",
                "head_first_name",
                "head_last_name",
                "head_middle_name"
            ],
            "properties": {
                "departament_email": {
                    "type": "string"
                },
                "departament_name": {
                    "type": "string"
                },
                "faculty_id": {
                    "type": "integer"
                },
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDisciplineRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "discipline_name"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "discipline_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDisciplineTypeRequest": {
            "type": "object",
            "required": [
                "discipline_type_name"
            ],
            "properties": {
                "discipline_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateEducationLevelRequest": {
            "type": "object",
            "required": [
                "education_level_name"
            ],
            "properties": {
                "education_level_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateEducationTypeRequest": {
            "type": "object",
            "required": [
                "education_type_name"
            ],
            "properties": {
                "education_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateFacultyRequest": {
            "type": "object",
            "required": [
                "faculty_email",
                "faculty_name",
                "head_first_name",
                "head_last_name",
                "head_middle_name",
                "university_id"
            ],
            "properties": {
                "faculty_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "faculty_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handler.CreateGroupRequest": {
            "type": "object",
            "required": [
                "group_id",
                "profile_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                }
            }
        },
        "handler.CreateHeadmanRequest": {
            "type": "object",
            "required": [
                "group_id",
                "student_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.CreateProfileRequest": {
            "type": "object",
            "required": [
                "education_type_id",
                "profile_name",
                "specialty_code"
            ],
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "profile_name": {
                    "type": "string"
                },
                "specialty_code": {
                    "type": "string"
                }
            }
        },
        "handler.CreateScheduleRequest": {
            "type": "object",
            "required": [
                "begin_studies",
                "classroom_id",
                "day_of_week",
                "discipline_id",
                "discipline_type_id",
                "group_id",
                "is_actual",
                "semester",
                "start_time",
                "teacher_id",
                "week_type"
            ],
            "properties": {
                "begin_studies": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "day_of_week": {
                    "type": "string",
                    "enum": [
                        "Понедельник",
                        "Вторник",
                        "Среда",
                        "Четверг",
                        "Пятница",
                        "Суббота",
                        "Воскресенье"
                    ]
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_type_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "is_actual": {
                    "type": "boolean"
                },
                "semester": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "week_type": {
                    "type": "string",
                    "enum": [
                        "Верхняя",
                        "Нижняя"
                    ]
                }
            }
        },
        "handler.CreateSpecialtyRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "education_level_id",
                "specialty_code",
                "specialty_name"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "education_level_id": {
                    "type": "integer"
                },
                "specialty_code": {
                    "type": "string"
                },
                "specialty_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateStudentRequest": {
            "type": "object",
            "required": [
                "first_name",
                "group_id",
                "last_name",
                "middle_name"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateTeacherRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "first_name",
                "last_name",
                "middle_name",
                "teacher_email"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "teacher_email": {
                    "type": "string"
                }
            }
        },
        "handler.CreateUniversityRequest": {
            "type": "object",
            "required": [
                "head_first_name",
                "head_last_name",
                "head_middle_name",
                "university_email",
                "university_name"
            ],
            "properties": {
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "university_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "handler.CreateUserRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "headman_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Студент",
                        "Староста",
                        "Админ",
                        "Преподаватель"
                    ]
                },
                "student_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "teacher_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.PatchAttendanceRequest": {
            "type": "object",
            "required": [
                "attendance_id"
            ],
            "properties": {
                "attendance_id": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "late_arrival": {
                    "type": "boolean"
                },
                "presence": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "respectfulness": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PatchClassroomRequest": {
            "type": "object",
            "required": [
                "classroom_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "classroom_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchDepartamentRequest": {
            "type": "object",
            "required": [
                "departament_id"
            ],
            "properties": {
                "departament_email": {
                    "type": "string"
                },
                "departament_id": {
                    "type": "integer"
                },
                "departament_name": {
                    "type": "string"
                },
                "faculty_id": {
                    "type": "integer"
                },
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchDisciplineRequest": {
            "type": "object",
            "required": [
                "discipline_id"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchDisciplineTypeRequest": {
            "type": "object",
            "required": [
                "discipline_type_id"
            ],
            "properties": {
                "discipline_type_id": {
                    "type": "integer"
                },
                "discipline_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchEducationLevelRequest": {
            "type": "object",
            "required": [
                "education_level_id"
            ],
            "properties": {
                "education_level_id": {
                    "type": "integer"
                },
                "education_level_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchEducationTypeRequest": {
            "type": "object",
            "required": [
                "education_type_id"
            ],
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "education_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchFacultyRequest": {
            "type": "object",
            "required": [
                "faculty_id",
                "faculty_name"
            ],
            "properties": {
                "faculty_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "faculty_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "faculty_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handler.PatchGroupRequest": {
            "type": "object",
            "required": [
                "group_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PatchHeadmanRequest": {
            "type": "object",
            "required": [
                "headman_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "headman_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PatchProfileRequest": {
            "type": "object",
            "required": [
                "profile_id"
            ],
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_name": {
                    "type": "string"
                },
                "specialty_code": {
                    "type": "string"
                }
            }
        },
        "handler.PatchScheduleRequest": {
            "type": "object",
            "required": [
                "schedule_id"
            ],
            "properties": {
                "begin_studies": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "day_of_week": {
                    "type": "string",
                    "enum": [
                        "Понедельник",
                        "Вторник",
                        "Среда",
                        "Четверг",
                        "Пятница",
                        "Суббота",
                        "Воскресенье"
                    ]
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_type_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "is_actual": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "semester": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "week_type": {
                    "type": "string",
                    "enum": [
                        "Верхняя",
                        "Нижняя"
                    ]
                }
            }
        },
        "handler.PatchSpecialtyRequest": {
            "type": "object",
            "required": [
                "education_level_id",
                "specialty_code"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "education_level_id": {
                    "type": "integer"
                },
                "specialty_code": {
                    "type": "string"
                },
                "specialty_name": {
                    "type": "string"
                }
            }
        },
        "handler.PatchStudentRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PatchTeacherRequest": {
            "type": "object",
            "required": [
                "teacher_id"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "teacher_email": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PatchUniversityRequest": {
            "type": "object",
            "required": [
                "university_id"
            ],
            "properties": {
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "university_id": {
                    "type": "integer"
                },
                "university_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "handler.PatchUserRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "headman_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Студент",
                        "Староста",
                        "Админ",
                        "Преподаватель"
                    ]
                },
                "student_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "teacher_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                }
            }
        },
        "handler.PutAttendanceRequest": {
            "type": "object",
            "required": [
                "attendance_id",
                "schedule_id",
                "student_id"
            ],
            "properties": {
                "attendance_id": {
                    "type": "integer"
                },
                "late_arrival": {
                    "type": "boolean"
                },
                "presence": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "respectfulness": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PutAttendancesRequest": {
            "type": "object",
            "required": [
                "attendances"
            ],
            "properties": {
                "attendances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.PutAttendanceRequest"
                    }
                }
            }
        },
        "handler.PutClassroomRequest": {
            "type": "object",
            "required": [
                "classroom_id",
                "classroom_name"
            ],
            "properties": {
                "classroom_id": {
                    "type": "integer"
                },
                "classroom_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutDepartamentRequest": {
            "type": "object",
            "required": [
                "departament_email",
                "departament_id",
                "departament_name",
                "faculty_id",
                "head_first_name",
                "head_last_name",
                "head_middle_name"
            ],
            "properties": {
                "departament_email": {
                    "type": "string"
                },
                "departament_id": {
                    "type": "integer"
                },
                "departament_name": {
                    "type": "string"
                },
                "faculty_id": {
                    "type": "integer"
                },
                "head_first_name": {
                    "type": "string"
                },
                "head_last_name": {
                    "type": "string"
                },
                "head_middle_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutDisciplineRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "discipline_id",
                "discipline_name"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutDisciplineTypeRequest": {
            "type": "object",
            "required": [
                "discipline_type_id",
                "discipline_type_name"
            ],
            "properties": {
                "discipline_type_id": {
                    "type": "integer"
                },
                "discipline_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutEducationLevelRequest": {
            "type": "object",
            "required": [
                "education_level_id",
                "education_level_name"
            ],
            "properties": {
                "education_level_id": {
                    "type": "integer"
                },
                "education_level_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutEducationTypeRequest": {
            "type": "object",
            "required": [
                "education_type_id",
                "education_type_name"
            ],
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "education_type_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutFacultyRequest": {
            "type": "object",
            "required": [
                "faculty_email",
                "faculty_id",
                "faculty_name",
                "head_first_name",
                "head_last_name",
                "head_middle_name",
                "university_id"
            ],
            "properties": {
                "faculty_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "faculty_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "faculty_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handler.PutGroupRequest": {
            "type": "object",
            "required": [
                "group_id",
                "profile_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PutHeadmanRequest": {
            "type": "object",
            "required": [
                "group_id",
                "headman_id",
                "student_id"
            ],
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "headman_id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PutProfileRequest": {
            "type": "object",
            "required": [
                "education_type_id",
                "profile_id",
                "profile_name",
                "specialty_code"
            ],
            "properties": {
                "education_type_id": {
                    "type": "integer"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_name": {
                    "type": "string"
                },
                "specialty_code": {
                    "type": "string"
                }
            }
        },
        "handler.PutScheduleRequest": {
            "type": "object",
            "required": [
                "begin_studies",
                "classroom_id",
                "day_of_week",
                "discipline_id",
                "discipline_type_id",
                "group_id",
                "is_actual",
                "schedule_id",
                "semester",
                "start_time",
                "teacher_id",
                "week_type"
            ],
            "properties": {
                "begin_studies": {
                    "type": "string"
                },
                "classroom_id": {
                    "type": "integer"
                },
                "day_of_week": {
                    "type": "string",
                    "enum": [
                        "Понедельник",
                        "Вторник",
                        "Среда",
                        "Четверг",
                        "Пятница",
                        "Суббота",
                        "Воскресенье"
                    ]
                },
                "discipline_id": {
                    "type": "integer"
                },
                "discipline_type_id": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "is_actual": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "semester": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "week_type": {
                    "type": "string",
                    "enum": [
                        "Верхняя",
                        "Нижняя"
                    ]
                }
            }
        },
        "handler.PutSpecialtyRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "education_level_id",
                "specialty_code",
                "specialty_name"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "education_level_id": {
                    "type": "integer"
                },
                "specialty_code": {
                    "type": "string"
                },
                "specialty_name": {
                    "type": "string"
                }
            }
        },
        "handler.PutStudentRequest": {
            "type": "object",
            "required": [
                "first_name",
                "group_id",
                "last_name",
                "middle_name",
                "student_id"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PutTeacherRequest": {
            "type": "object",
            "required": [
                "departament_id",
                "first_name",
                "last_name",
                "middle_name",
                "teacher_email",
                "teacher_id"
            ],
            "properties": {
                "departament_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "teacher_email": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "handler.PutUniversityRequest": {
            "type": "object",
            "required": [
                "head_first_name",
                "head_last_name",
                "head_middle_name",
                "university_email",
                "university_id",
                "university_name"
            ],
            "properties": {
                "head_first_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_last_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "head_middle_name": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 2
                },
                "university_email": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "university_id": {
                    "type": "integer"
                },
                "university_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "handler.PutUserRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "user_id",
                "username"
            ],
            "properties": {
                "headman_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Студент",
                        "Староста",
                        "Админ",
                        "Преподаватель"
                    ]
                },
                "student_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "teacher_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                }
            }
        },
        "handler.SignInUserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                }
            }
        },
        "handler.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "service.Tokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Endpoints for Admin role",
            "name": "Users"
        },
        {
            "description": "Endpoints for Headman role",
            "name": "Headman"
        },
        {
            "description": "Endpoints for Student role",
            "name": "Student"
        },
        {
            "description": "Endpoints for Teacher role",
            "name": "Teacher"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Osau AMS API",
	Description:      "This is the API for Osau AMS.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
